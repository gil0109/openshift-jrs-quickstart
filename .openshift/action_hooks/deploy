#!/bin/bash
# This deploy hook gets executed after dependencies are resolved and the
# build hook has been run but before the application has been started back
# up again.  This script gets executed directly, so it could be python, php,
# ruby, etc.

set -e

if [ -z "$OPENSHIFT_POSTGRESQL_DB_HOST" ] && [ -z "$OPENSHIFT_MYSQL_DB_HOST" ]
then
    echo 1>&2
    echo "Could not find mysql database.  Please run:" 1>&2
    echo "rhc cartridge add -a $OPENSHIFT_APP_NAME -c mysql-5.1" 1>&2
    echo "                  (OR)                                    " 1>&2    	
    echo "rhc cartridge add -a $OPENSHIFT_APP_NAME -c postgresql-9.2" 1>&2
    echo "then make a sample commit (add whitespace somewhere) and re-push" 1>&2
    echo 1>&2
    exit 5
fi

RETRY=60
while [ $RETRY -gt 0 ] ; do
    #reload env variables
    for env_var in  $OPENSHIFT_HOMEDIR/.env/*
    do
        . $env_var
    done

    #check for db
    if [ -n "$OPENSHIFT_POSTGRESQL_DB_HOST" ] || [ -n "$OPENSHIFT_MYSQL_DB_HOST" ]
    then
        echo "Database server found initializing..."
        sleep 5
        break
    fi

    sleep 1
    RETRY=$(( $RETRY - 1 ))
done

if [ -z "$OPENSHIFT_POSTGRESQL_DB_HOST" ] && [ -z "$OPENSHIFT_MYSQL_DB_HOST" ]
then
    exit 5
fi

# Confirm database exists, if not create it

#
## MySql Database
#
if [ "3306" = "$OPENSHIFT_MYSQL_DB_PORT" ]
then
 if ! /usr/bin/mysql -u "$OPENSHIFT_MYSQL_DB_USERNAME" --password="$OPENSHIFT_MYSQL_DB_PASSWORD" -h "$OPENSHIFT_MYSQL_DB_HOST" -e "select * from Account_;" "$OPENSHIFT_APP_NAME" > /dev/null 2>&1
  then
    echo
    echo "Database '$OPENSHIFT_APP_NAME' found, importing 'portal-minimal-mysql.sql' into database '$OPENSHIFT_APP_NAME'."
    echo
    /usr/bin/mysql -u "$OPENSHIFT_MYSQL_DB_USERNAME" --password="$OPENSHIFT_MYSQL_DB_PASSWORD" -h "$OPENSHIFT_MYSQL_DB_HOST" "$OPENSHIFT_APP_NAME" < "$OPENSHIFT_REPO_DIR/.openshift/action_hooks/portal-minimal-mysql.sql"
    echo
    echo "done."
    echo "==================================================================================="
    echo "  Liferay Portal Database :$OPENSHIFT_APP_NAME"
    echo "  Liferay-Admin login: test@liferay.com"
    echo "  Liferay-Admin password: test"
    echo "  !!!! Don't forget to change your portal admin(test@liferay.com) password!" !!!!
    echo "===================================================================================="
  else
    echo "Database '$OPENSHIFT_APP_NAME' initialized already with 'portal-minimal-mysql.sql', skipping import."
  fi
fi  

#
## Postgresql Database
#
if [ "5432" = "$OPENSHIFT_POSTGRESQL_DB_PORT" ]
 then
  if ! /usr/bin/psql -U "$OPENSHIFT_POSTGRESQL_DB_USERNAME" -w "$OPENSHIFT_POSTGRESQL_DB_PASSWORD" -h "$OPENSHIFT_POSTGRESQL_DB_HOST" -c "select * from $OPENSHIFT_APP_NAME.Account_" > /dev/null 2>&1
   then
    echo
    echo "Database '$OPENSHIFT_APP_NAME' found, importing 'portal-minimal-postgresql.sql' into database '$OPENSHIFT_APP_NAME'."
    echo
    /usr/bin/psql -q -U "$OPENSHIFT_POSTGRESQL_DB_USERNAME" -w "$OPENSHIFT_POSTGRESQL_DB_PASSWORD" -h "$OPENSHIFT_POSTGRESQL_DB_HOST" -d "$OPENSHIFT_APP_NAME" -f "$OPENSHIFT_REPO_DIR/portal-minimal-postgresql.sql"
    echo
    echo "done."
    echo "======================================================================================="
    echo "  Liferay Portal Database :$OPENSHIFT_APP_NAME"
    echo "  Liferay-Admin login: test@liferay.com"
    echo "  Liferay-Admin password: test"
    echo "  !!!! Don't forget to change your portal admin(test@liferay.com) password !!!!"
    echo "======================================================================================="
  else
    echo "Database '$OPENSHIFT_APP_NAME' initialized already with 'portal-minimal-postgresql.sql', skipping import."
  fi
fi 

_JRS_DEPLOYING=`head -1 $OPENSHIFT_REPO_DIR/.openshift/action_hooks/deploying-war-info`

cd ${OPENSHIFT_TMP_DIR}/${_JRS_DEPLOYING}
   # echo "------> Running: js-ant create-js-db ..."
   # ./js-ant create-js-db
echo "------> Running: js-ant init-js-db-ce ..."
./js-ant init-js-db-ce
echo "------> Running: js-ant import-minimal-ce ..."
./js-ant import-minimal-ce
echo "-----> Running: js-ant deploy-webapp-ce ..."
./js-ant deploy-webapp-ce
echo " done"
   #update the currently deployed war
echo ${_JRS_DEPLOYING} >> ${OPENSHIFT_DATA_DIR}/deployed-war-info
